// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: proto/dws_ml_service.proto

package dws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages for Search
type SearchRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Query                  string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`                                                                               // User's natural language query
	Filters                map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional key-value filters
	IncludeRecommendations bool                   `protobuf:"varint,3,opt,name=include_recommendations,json=includeRecommendations,proto3" json:"include_recommendations,omitempty"`              // Include recommendations in the response
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_proto_dws_ml_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dws_ml_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_dws_ml_service_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchRequest) GetIncludeRecommendations() bool {
	if x != nil {
		return x.IncludeRecommendations
	}
	return false
}

type SearchResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Results         []*DriftwoodItem       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`                 // Ranked search results
	Recommendations []*DriftwoodSummary    `protobuf:"bytes,2,rep,name=recommendations,proto3" json:"recommendations,omitempty"` // Context-aware recommendations
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_proto_dws_ml_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dws_ml_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_dws_ml_service_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetResults() []*DriftwoodItem {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetRecommendations() []*DriftwoodSummary {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

type DriftwoodItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImagePath     string                 `protobuf:"bytes,2,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	Metadata      *DriftwoodMetadata     `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriftwoodItem) Reset() {
	*x = DriftwoodItem{}
	mi := &file_proto_dws_ml_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriftwoodItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriftwoodItem) ProtoMessage() {}

func (x *DriftwoodItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dws_ml_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriftwoodItem.ProtoReflect.Descriptor instead.
func (*DriftwoodItem) Descriptor() ([]byte, []int) {
	return file_proto_dws_ml_service_proto_rawDescGZIP(), []int{2}
}

func (x *DriftwoodItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DriftwoodItem) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *DriftwoodItem) GetMetadata() *DriftwoodMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DriftwoodSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImagePath     string                 `protobuf:"bytes,2,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // Short summary fields
	Location      string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriftwoodSummary) Reset() {
	*x = DriftwoodSummary{}
	mi := &file_proto_dws_ml_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriftwoodSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriftwoodSummary) ProtoMessage() {}

func (x *DriftwoodSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dws_ml_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriftwoodSummary.ProtoReflect.Descriptor instead.
func (*DriftwoodSummary) Descriptor() ([]byte, []int) {
	return file_proto_dws_ml_service_proto_rawDescGZIP(), []int{3}
}

func (x *DriftwoodSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DriftwoodSummary) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *DriftwoodSummary) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DriftwoodSummary) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type DriftwoodMetadata struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Type              string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Size              float64                `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	Color             string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Texture           string                 `protobuf:"bytes,4,opt,name=texture,proto3" json:"texture,omitempty"`
	Location          string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	WeatherConditions string                 `protobuf:"bytes,6,opt,name=weather_conditions,json=weatherConditions,proto3" json:"weather_conditions,omitempty"`
	Coordinates       string                 `protobuf:"bytes,7,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	DominantSpecies   string                 `protobuf:"bytes,8,opt,name=dominant_species,json=dominantSpecies,proto3" json:"dominant_species,omitempty"`
	DistanceToWater   float64                `protobuf:"fixed64,9,opt,name=distance_to_water,json=distanceToWater,proto3" json:"distance_to_water,omitempty"`
	TimeOfDay         string                 `protobuf:"bytes,10,opt,name=time_of_day,json=timeOfDay,proto3" json:"time_of_day,omitempty"`
	Temperature       float64                `protobuf:"fixed64,11,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity          float64                `protobuf:"fixed64,12,opt,name=humidity,proto3" json:"humidity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DriftwoodMetadata) Reset() {
	*x = DriftwoodMetadata{}
	mi := &file_proto_dws_ml_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriftwoodMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriftwoodMetadata) ProtoMessage() {}

func (x *DriftwoodMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dws_ml_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriftwoodMetadata.ProtoReflect.Descriptor instead.
func (*DriftwoodMetadata) Descriptor() ([]byte, []int) {
	return file_proto_dws_ml_service_proto_rawDescGZIP(), []int{4}
}

func (x *DriftwoodMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DriftwoodMetadata) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DriftwoodMetadata) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *DriftwoodMetadata) GetTexture() string {
	if x != nil {
		return x.Texture
	}
	return ""
}

func (x *DriftwoodMetadata) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *DriftwoodMetadata) GetWeatherConditions() string {
	if x != nil {
		return x.WeatherConditions
	}
	return ""
}

func (x *DriftwoodMetadata) GetCoordinates() string {
	if x != nil {
		return x.Coordinates
	}
	return ""
}

func (x *DriftwoodMetadata) GetDominantSpecies() string {
	if x != nil {
		return x.DominantSpecies
	}
	return ""
}

func (x *DriftwoodMetadata) GetDistanceToWater() float64 {
	if x != nil {
		return x.DistanceToWater
	}
	return 0
}

func (x *DriftwoodMetadata) GetTimeOfDay() string {
	if x != nil {
		return x.TimeOfDay
	}
	return ""
}

func (x *DriftwoodMetadata) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *DriftwoodMetadata) GetHumidity() float64 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

var File_proto_dws_ml_service_proto protoreflect.FileDescriptor

var file_proto_dws_ml_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x77, 0x73, 0x5f, 0x6d, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x64, 0x77,
	0x73, 0x22, 0xd5, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x77, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7f, 0x0a, 0x0e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64,
	0x77, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x77, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f,
	0x6f, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x72, 0x0a, 0x0d, 0x44, 0x72,
	0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64,
	0x77, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71,
	0x0a, 0x10, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8d, 0x03, 0x0a, 0x11, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x57, 0x61,
	0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64,
	0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x32, 0x54, 0x0a, 0x16, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x72, 0x69, 0x66, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x12, 0x12,
	0x2e, 0x64, 0x77, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x77, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1e, 0x5a, 0x1c, 0x2e, 0x2e, 0x2f, 0x64, 0x77,
	0x73, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x64, 0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dws_ml_service_proto_rawDescOnce sync.Once
	file_proto_dws_ml_service_proto_rawDescData = file_proto_dws_ml_service_proto_rawDesc
)

func file_proto_dws_ml_service_proto_rawDescGZIP() []byte {
	file_proto_dws_ml_service_proto_rawDescOnce.Do(func() {
		file_proto_dws_ml_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dws_ml_service_proto_rawDescData)
	})
	return file_proto_dws_ml_service_proto_rawDescData
}

var file_proto_dws_ml_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_dws_ml_service_proto_goTypes = []any{
	(*SearchRequest)(nil),     // 0: dws.SearchRequest
	(*SearchResponse)(nil),    // 1: dws.SearchResponse
	(*DriftwoodItem)(nil),     // 2: dws.DriftwoodItem
	(*DriftwoodSummary)(nil),  // 3: dws.DriftwoodSummary
	(*DriftwoodMetadata)(nil), // 4: dws.DriftwoodMetadata
	nil,                       // 5: dws.SearchRequest.FiltersEntry
}
var file_proto_dws_ml_service_proto_depIdxs = []int32{
	5, // 0: dws.SearchRequest.filters:type_name -> dws.SearchRequest.FiltersEntry
	2, // 1: dws.SearchResponse.results:type_name -> dws.DriftwoodItem
	3, // 2: dws.SearchResponse.recommendations:type_name -> dws.DriftwoodSummary
	4, // 3: dws.DriftwoodItem.metadata:type_name -> dws.DriftwoodMetadata
	0, // 4: dws.DriftwoodSearchService.SearchDriftwood:input_type -> dws.SearchRequest
	1, // 5: dws.DriftwoodSearchService.SearchDriftwood:output_type -> dws.SearchResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_dws_ml_service_proto_init() }
func file_proto_dws_ml_service_proto_init() {
	if File_proto_dws_ml_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dws_ml_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dws_ml_service_proto_goTypes,
		DependencyIndexes: file_proto_dws_ml_service_proto_depIdxs,
		MessageInfos:      file_proto_dws_ml_service_proto_msgTypes,
	}.Build()
	File_proto_dws_ml_service_proto = out.File
	file_proto_dws_ml_service_proto_rawDesc = nil
	file_proto_dws_ml_service_proto_goTypes = nil
	file_proto_dws_ml_service_proto_depIdxs = nil
}
